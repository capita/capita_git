= gitc -- git helper for CAPITA Unternehmensberatung GmbH

=== SYNOPSIS

  $ gitc help

  $ gitc help <command>

  $ gitc check

  $ gitc create [name] ([source_branch])

  $ gitc update ([source_branch])

  $ gitc close ([source_branch])

=== DESCRIPTION 

*gitc* is a git automation tool used by CAPITA Unternehmensberatung GmbH which comes
packaged as the Rubygem *capita_git*.

It's main purpose is to automate repetivite tasks like spawing new feature branches,
updating and rebasing from the source branch of a given feature branch, as well as
closing/merging feature branches back into their original tree.

*gitc* uses a strict naming convention for creating, identifying and maintaining
local and remote branches and depends on the user's name being set in the git
configuration of your local cloned copy or in the global settings.

Please make sure that both
  $ git config user.name
and
  $ git config user.email
return your correct name and email address.

=== INSTALLATION

  $ gem install capita_git

=== COMMANDS

For detailed explanation of the various commands, please use *gitc help <command>*.

Available commands currently are:

  * <check>:
    Performs a basic check of your repository, as well as maintains fixbranches for
    major release tags both locally and remotely.
    i.e., assuming your current release tag is 1.0, this will automatically create
    the remote branch 1.0-fix that is based upon 1.0

  * <create> branch_name:
    Creates a feature branch based upon the current branch with the naming scheme
    <USER_INITIALS>_sourcebranch_branch_name>.
    Assuming you are 'CO' and on 1.0-fix, gitc create js_bugfix will create
    the local branch co_1.0-fix_js_bugfix and check it out

  * <update>:
    Updates the active feature branch's source branch and does a rebase, thus pulling
    in the latest changes into your local tree

  * <close>:
    Closes a feature branch by updating the source branch, rebasing it onto your feature
    branch and then merging into the source branch.
    

